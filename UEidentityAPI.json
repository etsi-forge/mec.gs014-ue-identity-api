{
  "swagger": "2.0",
  "info": {
    "description": "The ETSI MEC ISG MEC014 UE Identity API described using OpenAPI",
    "version": "1.0.2",
    "title": "UE Identity API",
    "license": {
      "name": "ETSI Forge copyright notice",
      "url": "https://forge.etsi.org/etsi-forge-copyright-notice.txt"
    }
  },
  "externalDocs": {
    "description": "ETSI GS MEC014 UE Identity API, V1.0.2",
    "url": "https://docbox.etsi.org/ISG/MEC/70-Draft/0014UEidentityAPI"
  },
  "host": "127.0.0.1:8081",
  "basePath": "/ui/v1",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "OauthSecurity": [
        "all"
      ]
    }
  ],
  "securityDefinitions": {
    "OauthSecurity": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://oauth.exampleAPI/token",
      "scopes": {
        "all": "Single oauth2 scope for API"
      }
    }
  },
  "parameters": {
    "Body.UeIdentityTagInfo": {
      "name": "UeIdentityTagInfo",
      "in": "body",
      "description": "'The updated \"state\" for each included UE Identity tag is included in the entity body of the request'",
      "required": true,
      "schema": {
        "$ref": "#/definitions/UeIdentityTagInfo"
      }
    },
    "Path.AppInstanceId": {
      "name": "appInstanceId",
      "in": "path",
      "description": "Represents a mobile edge application instance",
      "required": true,
      "type": "string"
    },
    "Query.UeIdentityTag": {
      "name": "ueIdentityTag",
      "in": "query",
      "description": "Represents a UE",
      "required": true,
      "type": "array",
      "items": {
        "type": "string"
      }
    }
  },
  "paths": {
    "/{appInstanceId}/ue_identity_tag_info": {
      "parameters": [
        {
          "$ref": "#/parameters/Path.AppInstanceId"
        }
      ],
      "get": {
        "description": "Retrieves information about a specific UeIdentityTagInfo resource",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Query.UeIdentityTag"
          }
        ],
        "responses": {
          "200": {
            "description": "It is used to indicate nonspecific success. The response body contains a representation of the UeIdentityTagInfo resource.",
            "schema": {
              "required": [
                "UeIdentityTagInfo"
              ],
              "properties": {
                "UeIdentityTagInfo": {
                  "$ref": "#/definitions/UeIdentityTagInfo"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect parameters were passed in the request.In the returned ProblemDetails structure, the \"detail\" attribute should convey more information about the error.",
            "schema": {
              "properties": {
                "ProblemDetails": {
                  "$ref": "#/definitions/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "The operation is not allowed given the current status of the resource. More information should be provided in the \"detail\" attribute of the \"ProblemDetails\" structure.",
            "schema": {
              "required": [
                "ProblemDetails"
              ],
              "properties": {
                "ProblemDetails": {
                  "$ref": "#/definitions/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The client provided a URI that cannot be mapped to a valid resource URL. In the returned ProblemDetails structure, the \"detail\" attribute should convey more information about the error.",
            "schema": {
              "properties": {
                "ProblemDetails": {
                  "$ref": "#/definitions/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Register/De-register the information about specific a UeIdentityTagInfo resource",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Body.UeIdentityTagInfo"
          }
        ],
        "responses": {
          "200": {
            "description": "It is used to indicate success. The response body contains a representation of the UeIdentityTagInfo resource",
            "schema": {
              "required": [
                "UeIdentityTagInfo"
              ],
              "properties": {
                "UeIdentityTagInfo": {
                  "$ref": "#/definitions/UeIdentityTagInfo"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect parameters were passed in the request.In the returned ProblemDetails structure, the \"detail\" attribute should convey more information about the error.",
            "schema": {
              "properties": {
                "ProblemDetails": {
                  "$ref": "#/definitions/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "An erroneous or missing bearer token. More information should be provided in the \"detail\" attribute of the \"ProblemDetails\" structure.",
            "schema": {
              "properties": {
                "ProblemDetails": {
                  "$ref": "#/definitions/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "The operation is not allowed given the current status of the resource. More information should be provided in the \"detail\" attribute of the \"ProblemDetails\" structure.",
            "schema": {
              "required": [
                "ProblemDetails"
              ],
              "properties": {
                "ProblemDetails": {
                  "$ref": "#/definitions/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The client provided a URI that cannot be mapped to a valid resource URL. In the returned ProblemDetails structure, the \"detail\" attribute should convey more information about the error.",
            "schema": {
              "properties": {
                "ProblemDetails": {
                  "$ref": "#/definitions/ProblemDetails"
                }
              }
            }
          },
          "412": {
            "description": "It is used when a condition has failed during conditional requests, e.g. when using ETags to avoid write conflicts.In the returned ProblemDetails structure, the \"detail\" attribute should convey more information about the error.",
            "schema": {
              "properties": {
                "ProblemDetails": {
                  "$ref": "#/definitions/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ProblemDetails": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Problem.type"
        },
        "title": {
          "$ref": "#/definitions/Problem.title"
        },
        "status": {
          "$ref": "#/definitions/Problem.status"
        },
        "detail": {
          "$ref": "#/definitions/Problem.detail"
        },
        "instance": {
          "$ref": "#/definitions/Problem.instance"
        }
      }
    },
    "Problem.type": {
      "type": "string",
      "format": "uri",
      "description": "A URI reference according to IETF RFC 3986 that identifies the problem type"
    },
    "Problem.title": {
      "type": "string",
      "description": "A short, human-readable summary of the problem type"
    },
    "Problem.status": {
      "type": "integer",
      "format": "uint32",
      "description": "The HTTP status code for this occurrence of the problem"
    },
    "Problem.detail": {
      "type": "string",
      "description": "A human-readable explanation specific to this occurrence of the problem"
    },
    "Problem.instance": {
      "type": "string",
      "format": "uri",
      "description": "A URI reference that identifies the specific occurrence of the problem"
    },
    "UeIdentityTagInfo": {
      "description": "information of UE identity tag used in UE Identity feature",
      "type": "object",
      "required": [
        "ueIdentityTags"
      ],
      "properties": {
        "ueIdentityTags": {
          "$ref": "#/definitions/UeIdentityTags"
        }
      }
    },
    "UeIdentityTags": {
      "description": "1 to N tags presented by a ME Application instance to a ME Platform",
      "type": "array",
      "items": {
        "required": [
          "ueIdentityTag",
          "state"
        ],
        "properties": {
          "ueIdentityTag": {
            "$ref": "#/definitions/UeIdentityTag"
          },
          "state": {
            "$ref": "#/definitions/State"
          }
        }
      }
    },
    "UeIdentityTag": {
      "description": "Specific tag presented by a ME Application instance to a ME Platform",
      "type": "string",
      "example": "UeTagA"
    },
    "State": {
      "description": "Status of the resource ueIdentityTagInfo",
      "type": "string",
      "enum": [
        "UNREGISTERED",
        "REGISTERED"
      ],
      "example": "REGISTERED"
    }
  }
}